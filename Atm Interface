import java.util.Scanner;



public class AtmInterface {
	String holderid;
	String holderpin;
	String accountholder;
	String accountNo;
	String TransactionDetails="";
	int TransactionsCount=0;
	float AvailableBalance=0;
	
	public void createAccount() {
		Scanner in = new Scanner(System.in);
		System.out.println("Name of accountholder is:");
		this.accountholder=in.nextLine();
		System.out.println("Account no. is:");
		this.accountNo=in.nextLine();
		System.out.println("holderid is:");
		this.holderid=in.nextLine();
		System.out.println("holderpin is:");
		this.holderpin=in.nextLine();
		System.out.println("Welcome");
		System.out.println("Your account is created successfully!!");		
		
	}	
	public void login() {
		boolean flag=true;
		Scanner in=new Scanner(System.in);
		while(flag==true) {
			System.out.println("holderid is :");
			String HolderId=in.nextLine();
			if(HolderId.equals(holderid)) {
				System.out.println("holderpin is :");
				String HolderPin=in.nextLine();
				if(HolderPin.equals(holderpin)) {
					System.out.println("Congratulations!");
					System.out.println("Your account has been logedin successfully!");
					flag=false;
				}
				else
					System.out.println("\n Please check your holderpin and try again!");
			}
			else 
				System.out.println("\n Please check the holderid and try again!");
		}
	}
	public void withdraw() {
		System.out.println("Enter amount for withdrawal: ");
		Scanner in = new Scanner(System.in);
		float WithdrawalAmount=in.nextFloat();
		if(AvailableBalance>=WithdrawalAmount) {
			AvailableBalance=AvailableBalance-WithdrawalAmount;
			System.out.println(WithdrawalAmount+"has successfully withdrawn");
			String transaction =WithdrawalAmount+"has successfully withdrawn \n";
			TransactionDetails=TransactionDetails.concat(transaction);
			TransactionsCount++;
		}
		else
			System.out.println("Account have no enough balance!!");
	}
	public void deposit() {
		System.out.println("Enter amount to deposit:");
		Scanner in = new Scanner(System.in);
		float depositedAmount=in.nextFloat();
		AvailableBalance=AvailableBalance+depositedAmount;
		System.out.println(depositedAmount+"has been deposited successfully!!");
		String transaction =depositedAmount+"has deposited .\n";
		TransactionDetails=TransactionDetails.concat(transaction);
		TransactionsCount++;
	}
	public void transfer() {
		Scanner in=new Scanner(System.in);
		System.out.println("\n Enter Receiver's Account number");
		String Receiveraccno=in.nextLine();
		System.out.println("\n Enter the amount to transfer:");
		float Amount=in.nextFloat();
		if(Amount<=AvailableBalance) {
			AvailableBalance=AvailableBalance-Amount;
			System.out.println(Amount+"has been transferred successfully.");
			String transaction =Amount+"has been transferred  to "+Receiveraccno +"\n";
			TransactionDetails=TransactionDetails.concat(transaction);
			TransactionsCount++;
		
	     }
			
	}
	public void CheckBalance() {
		System.out.println("Your final balance is"+ AvailableBalance);		
	}
	public void TransactionHistory() {
		System.out.println("\n"+TransactionDetails);
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
				Scanner in = new Scanner(System.in);
				System.out.println(" *********WELCOME********\n\n");
				System.out.println(" Enter 1 to Create account\n 0 to exit\n");
				System.out.println("Enter your choice");
				int input=in.nextInt();
				if(input==1) {
					AtmInterface user = new AtmInterface();
					user.createAccount();
					System.out.println("\nplease enter atm details to login\n");
					user.login();
					boolean exit=false;
					while(!exit) {
						System.out.println("\n1.withdraw \n2.deposit \n3.Trasfer \n4.check balance \n5.check transactions \n6.Exit\n");
						System.out.println("Enter your choice");
						int choice = in.nextInt();
						if(choice<7 && choice>0) {
							switch(choice) {
							case 1:user.withdraw();
									break;
							case 2:user.deposit();
									break;
							case 3:user.transfer();
									break;
							case 4:user.CheckBalance();
									break;
							case 5:user.TransactionHistory();
									break;
							case 6:exit=true;
									break;
							
							}
						}
					}
				}
			}

	}
